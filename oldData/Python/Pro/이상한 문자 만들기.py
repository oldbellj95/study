def solution(s):
    answer = ''
    c = 1
    for i in range(len(s)):
        if s[i] == ' ':
            answer += ' '
            c = 1
        elif c % 2 == 1:
            answer += s[i].upper()
            c += 1
        elif c % 2 == 0:
            answer += s[i].lower()
            c += 1
    return answer

# 이상한 문자 만들기
# 문제 설명
# 문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.

# 제한 사항
# 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.
# 첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.
# 입출력 예

# 처음에는 단어별로 split()함수를 이용해서 따로 저장한다음에 인덱스별로 홀짝을 따져서 하려고했다.
# 안됬다 파이썬은 문자열생성 됬을때 인덱스 하나 하나 수정하는게 안되는듯.
# 그래서 그냥 카운터 하나두고 공백이 나오면 카운터를 1로 초기화 해서 다시 홀짝을 판별하게 했다.
# 그리고 문제좀 잘봐야겠다. 문제 풀고나니까 안되길래 뭔가했는데 짝수문자는 무조건 소문자로 바꿔야 해서 다 틀렸던것이였다.