def solution(n):
    n = n+ 1 #문제들이 풀리지 않아 입력값인 n에 을 더했다. 탐색하는 값의 범위를 1늘린것만으로 문제가 풀림
    p = [True] * n # 찾으려는 숫자의 크기만큼 리스트를 만들어 모두가 소수라고 판정해둔다
    m = int(n ** 0.5) # 찾으려는 범위의 숫자를 반올림 시켜둔다. n의 최대약수가 n재곱근이하라서 n재곱근까지 검사한다. math.sqrt() 함수로도 가능.
    for i in range(2, m+1):
        if p[i] == True: 
            for j in range(i+i,n,i): # step을 이용해서 최소 공약수가 되는 수를 기준으로 모두 일반숫자로 바꾼다.
                p[j] = False
    return len([i for i in range(2, n) if p[i] == True])


#     문제 설명
# 1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.
# 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
# (1은 소수가 아닙니다.)
# 제한 조건
# n은 2이상 1000000이하의 자연수입니다.

# 입출력 예 #1
# 1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환
# 입출력 예 #2
# 1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환

# 에라토스테네스의 체를 이용해서 문제를 풀어야한다 
# 소수를 분별하는 가장 쉬운방법 이라고는 하는데 몰라... 모르겠어 ㅠㅠㅠㅠㅠ

